{"version":3,"sources":["context/dataContext.jsx","Components/FilterByName.jsx","Components/FilterByTag.jsx","Components/OrderFilter.jsx","Components/FilterList.jsx","Components/PlanetLine.jsx","Components/PlanetTable.jsx","Components/SelectedFilters.jsx","context/dataProvider.jsx","App.js","index.js","Assets/star-wars.gif"],"names":["dataContext","createContext","FilterByName","setNameFilter","useContext","className","htmlFor","data-testid","id","type","placeholder","onChange","event","value","target","filterName","FilterByTag","useState","columnFilter","setColumnFilter","comparisonFilter","setComparisonFilter","valueFilter","setValueFilter","filterBy","setFilterBy","setFilterTags","filterTags","e","map","tag","key","onClick","newFilter","column","comparison","newTags","filter","filterByTag","OrderFilter","columnSelected","setColumnSelected","sortSelected","setSortSelected","setOrderTag","name","columnOrder","sort","FilterList","PlanetLine","planet","rotationPeriod","rotation_period","orbitalPeriod","orbital_period","diameter","climate","gravity","terrain","surfaceWater","surface_water","population","PlanetTable","planets","setPlanets","state","useEffect","a","fetch","then","data","json","results","getPlanets","filteredPlanets","filtersByTag","filters","filterByNumericValues","order","filterByName","includes","parseInt","Array","b","orderStringArray","orderNumberArray","filterPlanets","CurrentPlanet","SelectedFilters","newArrayOfFilters","CurrentFilter","newFiltersTag","removeFilter","Provider","children","nameFilter","contextValue","App","src","starWarsGif","alt","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.70dd1364.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst dataContext = createContext();\n\nexport default dataContext;\n","import React, { useContext } from 'react';\nimport dataContext from '../context/dataContext';\n\nfunction FilterByName() {\n  const { setNameFilter } = useContext(dataContext);\n  const filterName = (event) => {\n    const { value } = event.target;\n    setNameFilter(value);\n  };\n\n  return (\n    <div className=\"filterByName\">\n      <label htmlFor=\"name-filter\">\n        <input\n          className=\"textInput\"\n          data-testid=\"name-filter\"\n          id=\"name-filter\"\n          type=\"text\"\n          placeholder=\"Name\"\n          onChange={ (event) => filterName(event) }\n        />\n      </label>\n    </div>\n  );\n}\n\nexport default FilterByName;\n","import React, { useContext, useState } from 'react';\nimport dataContext from '../context/dataContext';\n\nfunction FilterByTag() {\n  const [columnFilter, setColumnFilter] = useState('population');\n  const [comparisonFilter, setComparisonFilter] = useState('maior que');\n  const [valueFilter, setValueFilter] = useState();\n\n  const { filterBy, setFilterBy, setFilterTags, filterTags } = useContext(dataContext);\n\n  const filterByTag = () => {\n    const newFilter = {\n      column: columnFilter,\n      comparison: comparisonFilter,\n      value: valueFilter,\n    };\n    const newTags = filterTags.filter((tag) => tag !== columnFilter);\n\n    setFilterTags(newTags);\n    setFilterBy([...filterBy, newFilter]);\n  };\n\n  return (\n    <div className=\"filterByTag\">\n      <label htmlFor=\"column-filter\">\n        <select\n          id=\"column-filter\"\n          data-testid=\"column-filter\"\n          value={ columnFilter }\n          onChange={ (e) => setColumnFilter(e.target.value) }\n        >\n          {filterTags.map((tag) => (\n            <option key={ tag } value={ tag }>{tag}</option>\n          ))}\n        </select>\n      </label>\n      <label htmlFor=\"comparison-filter\">\n        <select\n          id=\"comparison-filter\"\n          data-testid=\"comparison-filter\"\n          value={ comparisonFilter }\n          onChange={ (e) => setComparisonFilter(e.target.value) }\n        >\n          <option value=\"maior que\">maior que</option>\n          <option value=\"menor que\">menor que</option>\n          <option value=\"igual a\">igual a</option>\n        </select>\n      </label>\n      <label htmlFor=\"value-filter\">\n        <input\n          className=\"textInput numberInput\"\n          id=\"value-filter\"\n          data-testid=\"value-filter\"\n          type=\"number\"\n          onChange={ (e) => setValueFilter(e.target.value) }\n        />\n      </label>\n      <button\n        type=\"button\"\n        data-testid=\"button-filter\"\n        onClick={ () => filterByTag() }\n      >\n        Filtrar\n      </button>\n    </div>\n  );\n}\n\nexport default FilterByTag;\n","import React, { useContext, useState } from 'react';\nimport dataContext from '../context/dataContext';\n\nfunction OrderFilter() {\n  const [columnSelected, setColumnSelected] = useState('');\n  const [sortSelected, setSortSelected] = useState('');\n\n  const { setOrderTag } = useContext(dataContext);\n\n  const orderByColumn = () => {\n    const newOrder = {\n      columnOrder: columnSelected,\n      sort: sortSelected,\n    };\n\n    setOrderTag(newOrder);\n  };\n\n  return (\n    <div className=\"OrderByColumn\">\n      <label htmlFor=\"column-sort\">\n        <select\n          id=\"column-sort\"\n          data-testid=\"column-sort\"\n          value={ columnSelected }\n          onChange={ (e) => setColumnSelected(e.target.value) }\n        >\n          <option value=\"name\">name</option>\n          <option value=\"rotation_period\">rotationPeriod</option>\n          <option value=\"orbital_period\">orbitalPeriod</option>\n          <option value=\"diameter\">diameter</option>\n          <option value=\"climate\">climate</option>\n          <option value=\"gravity\">gravity</option>\n          <option value=\"terrain\">terrain</option>\n          <option value=\"surface_water\">surfaceWater</option>\n          <option value=\"population\">population</option>\n        </select>\n      </label>\n      <label htmlFor=\"column-sort-input-asc\">\n        <input\n          type=\"radio\"\n          name=\"sortOrder\"\n          onChange={ () => setSortSelected('ASC') }\n          data-testid=\"column-sort-input-asc\"\n          id=\"column-sort-input-asc\"\n        />\n        Ascendente\n      </label>\n      <label htmlFor=\"column-sort-input-desc\">\n        <input\n          type=\"radio\"\n          name=\"sortOrder\"\n          onChange={ () => setSortSelected('DESC') }\n          data-testid=\"column-sort-input-desc\"\n          id=\"column-sort-input-desc\"\n        />\n        Descendente\n      </label>\n      <button\n        type=\"button\"\n        data-testid=\"column-sort-button\"\n        onClick={ () => orderByColumn() }\n      >\n        Filtrar\n      </button>\n    </div>\n  );\n}\n\nexport default OrderFilter;\n","import React from 'react';\nimport FilterByName from './FilterByName';\nimport FilterByTag from './FilterByTag';\nimport OrderFilter from './OrderFilter';\n\nfunction FilterList() {\n  return (\n    <div className=\"filterList\">\n      <p>Filters:</p>\n      <FilterByName />\n      <FilterByTag />\n      <OrderFilter />\n    </div>\n  );\n}\n\nexport default FilterList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction PlanetLine({ planet }) {\n  const {\n    name,\n    rotation_period: rotationPeriod,\n    orbital_period: orbitalPeriod,\n    diameter,\n    climate,\n    gravity,\n    terrain,\n    surface_water: surfaceWater,\n    population,\n  } = planet;\n\n  return (\n    <tr>\n      <td data-testid=\"planet-name\">{name}</td>\n      <td>{rotationPeriod}</td>\n      <td>{orbitalPeriod}</td>\n      <td>{diameter}</td>\n      <td>{climate}</td>\n      <td>{gravity}</td>\n      <td>{terrain}</td>\n      <td>{surfaceWater}</td>\n      <td>{population}</td>\n    </tr>\n  );\n}\n\nPlanetLine.propTypes = {\n  planet: PropTypes.shape({\n    name: PropTypes.string,\n    rotation_period: PropTypes.string,\n    orbital_period: PropTypes.string,\n    diameter: PropTypes.string,\n    climate: PropTypes.string,\n    gravity: PropTypes.string,\n    terrain: PropTypes.string,\n    surface_water: PropTypes.string,\n    population: PropTypes.string,\n  }).isRequired,\n};\n\nexport default PlanetLine;\n","import React, { useEffect, useState, useContext } from 'react';\nimport PlanetLine from './PlanetLine';\nimport dataContext from '../context/dataContext';\n\nconst ONE_NEGATIVE = -1;\nconst ONE_POSITIVE = 1;\n\nfunction PlanetTable() {\n  const [planets, setPlanets] = useState([]);\n  const { state } = useContext(dataContext);\n  const DEZ = 10;\n\n  useEffect(() => {\n    const getPlanets = async () => {\n      const endpoint = 'https://swapi-trybe.herokuapp.com/api/planets/';\n      const { results } = await fetch(endpoint).then((data) => data.json());\n      setPlanets(results);\n    };\n\n    getPlanets();\n  }, []);\n\n  const orderStringArray = (Array) => {\n    const { columnOrder, sort } = state.filters.order;\n\n    switch (sort) {\n    case 'ASC':\n      Array.sort((a, b) => {\n        if (a[columnOrder] > b[columnOrder]) return ONE_POSITIVE;\n        if (a[columnOrder] < b[columnOrder]) return ONE_NEGATIVE;\n        return 0;\n      });\n      break;\n    case 'DESC':\n      Array.sort((a, b) => {\n        if (a[columnOrder] < b[columnOrder]) return ONE_POSITIVE;\n        if (a[columnOrder] > b[columnOrder]) return ONE_NEGATIVE;\n        return 0;\n      });\n      break;\n    default:\n      Array.sort();\n    }\n    return Array;\n  };\n\n  const orderNumberArray = (Array) => {\n    const { columnOrder, sort } = state.filters.order;\n\n    switch (sort) {\n    case 'ASC':\n      Array.sort((a, b) => a[columnOrder] - b[columnOrder]);\n      break;\n    case 'DESC':\n      Array.sort((a, b) => b[columnOrder] - a[columnOrder]);\n      break;\n    default:\n      Array.sort();\n    }\n    return Array;\n  };\n\n  const filterPlanets = () => {\n    let filteredPlanets = planets;\n    const filtersByTag = state.filters.filterByNumericValues;\n    const stringColumns = [\n      'name', 'climate', 'climate', 'gravity',\n      'terrain', 'films', 'created', 'edited', 'url'];\n    const { columnOrder } = state.filters.order;\n\n    if (state.filters.filterByName.name !== '') {\n      filteredPlanets = filteredPlanets\n        .filter((planet) => planet.name.includes(state.filters.filterByName.name));\n    }\n\n    if (filtersByTag !== []) {\n      state.filters.filterByNumericValues.map(({ column, comparison, value }) => {\n        switch (comparison) {\n        case 'maior que':\n          filteredPlanets = filteredPlanets\n            .filter((planet) => planet[column] > parseInt(value, DEZ));\n          break;\n        case 'menor que':\n          filteredPlanets = filteredPlanets\n            .filter((planet) => planet[column] < parseInt(value, DEZ));\n          break;\n        case 'igual a':\n          filteredPlanets = filteredPlanets\n            .filter((planet) => parseInt(planet[column], 10) === parseInt(value, DEZ));\n          break;\n        default:\n          filteredPlanets = planets;\n        }\n        return filteredPlanets;\n      });\n    }\n\n    if (stringColumns.includes(columnOrder)) {\n      filteredPlanets = orderStringArray(filteredPlanets);\n    } else {\n      filteredPlanets = orderNumberArray(filteredPlanets);\n    }\n\n    return filteredPlanets;\n  };\n\n  return (\n    <table className=\"planetsTable\">\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Rotation Period</th>\n          <th>Orbital Period</th>\n          <th>Diameter</th>\n          <th>Climate</th>\n          <th>Gravity</th>\n          <th>Terrain</th>\n          <th>Surface Water</th>\n          <th>Population</th>\n        </tr>\n      </thead>\n      <tbody>\n        {(filterPlanets()).map((CurrentPlanet) => (\n          <PlanetLine key={ CurrentPlanet.name } planet={ CurrentPlanet } />\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nexport default PlanetTable;\n","import React, { useContext } from 'react';\nimport dataContext from '../context/dataContext';\n\nfunction SelectedFilters() {\n  const { state, setFilterBy, setFilterTags, filterTags } = useContext(dataContext);\n  const { filterByNumericValues } = state.filters;\n\n  const removeFilter = (event, filter) => {\n    const newArrayOfFilters = filterByNumericValues\n      .filter((CurrentFilter) => CurrentFilter.column !== filter.column);\n\n    const newFiltersTag = [...filterTags, filter.column];\n\n    setFilterTags(newFiltersTag);\n    setFilterBy(newArrayOfFilters);\n  };\n\n  return (\n    <div className=\"selectedFilters\">\n      {filterByNumericValues.map((filter) => (\n        <div className=\"filterContainer\" data-testid=\"filter\" key={ filter.column }>\n          {`${filter.column} ${filter.comparison} ${filter.value}`}\n          <button\n            onClick={ (event) => removeFilter(event, filter) }\n            type=\"button\"\n          >\n            X\n          </button>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default SelectedFilters;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport dataContext from './dataContext';\n\nfunction Provider({ children }) {\n  const filterColumnTypes = [\n    'population', 'orbital_period', 'diameter', 'rotation_period', 'surface_water'];\n\n  const initialOrder = {\n    columnOrder: 'name',\n    sort: 'ASC',\n  };\n\n  const [nameFilter, setNameFilter] = useState('');\n  const [filterBy, setFilterBy] = useState([]);\n  const [filterTags, setFilterTags] = useState(filterColumnTypes);\n  const [orderTag, setOrderTag] = useState(initialOrder);\n\n  const state = {\n    filters: {\n      filterByName: {\n        name: nameFilter,\n      },\n      filterByNumericValues: filterBy,\n      order: orderTag,\n    },\n  };\n\n  const contextValue = {\n    state,\n    setNameFilter,\n    setFilterBy,\n    filterBy,\n    filterTags,\n    setFilterTags,\n    setOrderTag,\n  };\n\n  return (\n    <dataContext.Provider value={ contextValue }>\n      {children}\n    </dataContext.Provider>\n  );\n}\n\nProvider.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n\nexport default Provider;\n","import React from 'react';\nimport './App.css';\n\nimport FilterList from './Components/FilterList';\nimport PlanetTable from './Components/PlanetTable';\nimport SelectedFilters from './Components/SelectedFilters';\nimport Provider from './context/dataProvider';\n\nimport starWarsGif from './Assets/star-wars.gif';\n\nfunction App() {\n  return (\n    <Provider>\n      <main>\n        <header>\n          <div className=\"gif\">\n            <img src={ starWarsGif } alt=\"StarWarsGif\" />\n          </div>\n          <FilterList />\n        </header>\n        <SelectedFilters />\n        <PlanetTable />\n      </main>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/star-wars.13be813c.gif\";"],"sourceRoot":""}